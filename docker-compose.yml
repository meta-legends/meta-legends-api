#version: '3.6'
#services:
#
#  mariadb:
#    container_name: mariadb
#    image: 'mariadb:10.6'
#    environment:
#      - MARIADB_DATABASE=meta-legends
#      - MARIADB_ROOT_USER=root
#      - MARIADB_ROOT_PASSWORD=root
#      - ALLOW_EMPTY_PASSWORD=yes
#
#  phpmyadmin:
#    image: phpmyadmin/phpmyadmin
#    depends_on:
#      - mariadb
#    ports:
#      - "8081:80"
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      PMA_HOST: mariadb
#      UPLOAD_LIMIT: 300M
#
#  backend:
#    build: .
#    image: node:18.15.0-alpine
#    working_dir: /app
#    container_name: backend
#    depends_on:
#      - mariadb
#    environment:
#      DB_HOST: mariadb
#      DB_PORT: 3306
#      DB_USERNAME: root
#      DB_PASSWORD: root
#      DB_DATABASE: meta-legends
#    volumes:
#      - ./:/app
#    ports:
#      - "3000:3000"
#    command: npm run start:dev
#    env_file: .env
#
#volumes:
#  db_data:

services:

  mariadb:
    container_name: mariadb
    image: mariadb:10.6
    platform: linux/arm64 # Optimisation pour les puces Apple Silicon
    environment:
      MARIADB_DATABASE: meta-legends
      MARIADB_ROOT_USER: root
      MARIADB_ROOT_PASSWORD: root
      MARIADB_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql # Volume persistant pour les données
    networks:
      - app_network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin # Version optimisée pour ARM
    depends_on:
      - mariadb
    ports:
      - "8081:80"
    environment:
      MYSQL_ROOT_PASSWORD: root
      PMA_HOST: mariadb
      UPLOAD_LIMIT: 300M
    networks:
      - app_network

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    image: backend:latest
    platform: linux/arm64
    working_dir: /app
    depends_on:
      - mariadb
    environment:
      DB_HOST: mariadb
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_DATABASE: meta-legends
    volumes:
      - ./:/app
      - /app/node_modules # Empêche des conflits avec les modules locaux
    ports:
      - "3000:3000"
    command: npm run start:dev
    env_file: .env
    networks:
      - app_network

volumes:
  db_data:

networks:
  app_network:
    driver: bridge

